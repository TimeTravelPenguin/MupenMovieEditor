<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MupenSharp</name>
    </assembly>
    <members>
        <member name="T:MupenSharp.Attributes.StringEncodingAttribute">
            <summary>
            </summary>
        </member>
        <member name="P:MupenSharp.Attributes.StringEncodingAttribute.Encoding">
            <summary>
              Sets the string encoding type for reading and writing
            </summary>
        </member>
        <member name="P:MupenSharp.Attributes.StringEncodingAttribute.ByteSize">
            <summary>
              The size of the string in bytes
            </summary>
        </member>
        <member name="T:MupenSharp.Extensions.EnumExtensions">
            <summary>
              Extension methods for type <see cref="T:System.Enum" />.
            </summary>
        </member>
        <member name="M:MupenSharp.Extensions.EnumExtensions.EnumToArray``1">
            <summary>
              Returns an array of type <typeparamref name="T" /> containing <see cref="T:System.Enum" /> values.
            </summary>
            <typeparam name="T">
              The element type of the array
            </typeparam>
            <returns>
              Returns an array of type <typeparamref name="T" />
            </returns>
        </member>
        <member name="M:MupenSharp.Models.InputModel.#ctor(System.Byte[])">
            <summary>
              InputModel representing data contained within an .m64 file.
            </summary>
            <param name="input">
              A 4-byte value containing X and Y analogue positions, and the XOR of buttons pressed.
              The first two bytes are the XOR of the buttons, followed by the X and Y inputs
              represented by 1-byte each.
              <para />
              <example>
                Given the input 0xC0182541, this can be seen as:
                <list type="bullet">
                  <item>
                    <term>Button Flags</term>
                    <description>2-bytes = C0 18</description>
                  </item>
                  <item>
                    <term>X Analogue</term>
                    <description>1-byte = 25</description>
                  </item>
                  <item>
                    <term>Y Analogue</term>
                    <description>1-byte = 41</description>
                  </item>
                </list>
              </example>
              <remarks>
                When reading from an .m64 file from offset 0x400, 4-bytes at a time, the following code works if the
                hex input is NOT REVERSED.
              </remarks>
            </param>
        </member>
        <member name="T:MupenSharp.Models.M64">
            <summary>
              Stores data of a .m64 file
            </summary>
        </member>
        <member name="P:MupenSharp.Models.M64.Version">
            <summary>
              Version number. Should be 3.
            </summary>
        </member>
        <member name="P:MupenSharp.Models.M64.VerticalInterrupts">
            <summary>
              The number of frames (vertical interrupts).
            </summary>
        </member>
        <member name="P:MupenSharp.Models.M64.RerecordCount">
            <summary>
              The number of file rerecords
            </summary>
        </member>
        <member name="P:MupenSharp.Models.M64.ViPerSecond">
            <summary>
              Frames (vertical interrupts) per second
            </summary>
        </member>
        <member name="P:MupenSharp.Models.M64.NumberOfControllers">
            <summary>
              The number of controllers enabled for the file
            </summary>
        </member>
        <member name="P:MupenSharp.Models.M64.InputFrames">
            <summary>
              The number of input samples from the controllers
            </summary>
        </member>
        <member name="P:MupenSharp.Models.M64.MovieStartType">
            <summary>
              The movie start type.
              <list type="table">
                <listheader>
                  <term>
                    Value
                  </term>
                  <term>
                    Description
                  </term>
                </listheader>
                <item>
                  <term>1</term>
                  <term>
                    movie begins from snapshot (the snapshot will be loaded from an external file with the movie filename
                    and a .st extension)
                  </term>
                </item>
                <item>
                  <term> 2</term>
                  <term>
                    movie begins from power-on
                  </term>
                </item>
                <item>
                  <term>other values</term>
                  <term>
                    invalid movie
                  </term>
                </item>
              </list>
            </summary>
        </member>
        <member name="P:MupenSharp.Models.M64.ControllerFlags">
            <summary>
              Flags set for each controller
              <list type="bullet">
                <item>
                  <term>bit 0</term>
                  <description>
                    Controller 1 present
                  </description>
                </item>
                <item>
                  <term>bit 4</term>
                  <description>
                    Controller 1 has mempak
                  </description>
                </item>
                <item>
                  <term>bit 8</term>
                  <description>
                    Controller 1 has rumblepak
                  </description>
                </item>
              </list>
              +1..3 for controllers 2..4.
            </summary>
        </member>
        <member name="P:MupenSharp.Models.M64.NameOfRom">
            <summary>
            The internal name of ROM used when recording, directly from ROM.
            </summary>
        </member>
    </members>
</doc>
